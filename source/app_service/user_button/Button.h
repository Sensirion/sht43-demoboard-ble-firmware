////////////////////////////////////////////////////////////////////////////////
//  S E N S I R I O N   AG,  Laubisruetistr. 50, CH-8712 Staefa, Switzerland
////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, Sensirion AG
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived from this
// software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
////////////////////////////////////////////////////////////////////////////////

/// @file Button.h
///
/// The button module provides an interface to capture long and short press
/// actions from the user.

#ifndef BUTTON_H
#define BUTTON_H

#include "hal/Gpio.h"
#include "utility/scheduler/Message.h"

/// handler to deal with a button event
typedef void (*Button_EventHandlerCb_t)(void);

/// Defines the events that can be generated by the user button.
typedef enum {
  BUTTON_EVENT_SHORT_PRESS,
  BUTTON_EVENT_LONG_PRESS
} Button_Event_t;

/// Defines the structure of a button event
typedef struct _tUserButton_Message {
  MessageBroker_MsgHead_t head;  ///< head of the message
  uint32_t unused;               ///< unused element
} Button_Message_t;

/// Initialize the button handler
///
/// The button registers its own GpioExtSignalHandler in the HAL and
/// initializes the state machine to debounce and detect press and long press
/// events.
/// @param pressHandler Application handler of the button press event.
/// @param longPressHandler Application handler of the button long press event.
void Button_Init(Button_EventHandlerCb_t pressHandler,
                 Button_EventHandlerCb_t longPressHandler);

#endif  // BUTTON_H
